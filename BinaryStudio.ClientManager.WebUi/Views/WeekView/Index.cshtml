@using BinaryStudio.ClientManager.DomainModel.Entities
@using BinaryStudio.ClientManager.DomainModel.Infrastructure
@model BinaryStudio.ClientManager.WebUi.Models.WeekViewModel
           
<script type="text/javascript">
    /*function WeekViewModel() {
        var self = this;
        self.filter = ko.observable("");
        self.filteredInquiries = ko.computed(function() {
            return @Model.Inquiries.Where(x => x.Client.FirstName.Contains("a"));
        });
    };*/

    //current inquiry id for modal dialog box
    var currentInquiryId;
    
    //when save button click in modal dialog box
    function postComment() {
        var comment = $('#commentTextArea').val();
        
        var onSuccess = function() {
            location.reload(true);
        };

        var onError = function() {
            alert("Error while AJAX request");
        };

        $.ajax({
            url: "@Url.Action("AddComment")",
            type: "POST",
            data: { inquiryId: window.currentInquiryId, comment: comment }
        }).success(onSuccess).error(onError);
    }

    //when click on menu->add comment
    function ShowModal(inquiryId) {
        window.currentInquiryId = inquiryId;       

        var onError = function() {
            alert("Error while AJAX request");
        };

        $.ajax({
            url: "@Url.Action("GetComment")",
            type: "GET",
            data: { inquiryId: inquiryId }            
        }).done(function(data) {
            $('#commentTextArea').val(data); 
        }).error(onError);
        
        $('#myModal').modal();
    };

    //When click on menu->assign to->some employee
    function OnClickAssign(employee, inquiry) {
        var onSuccess = function() {
            location.reload(true);
        };

        var onError = function() {
            alert("Error while AJAX request");
        };

        $.ajax({
            url: "@Url.Action("AssignEmployee")",
            type: "POST",
            data: { inquiryId: inquiry, employeeId: employee }
        }).success(onSuccess).error(onError);
    };

    $(document).ready(function () {
        ko.applyBindings(new WeekViewModel());
    });
</script>

@helper RenderColumn(string weekDay, DateTime date, IEnumerable<Inquiry> inquiries, IEnumerable<Person> employees)
{
    <div class="header-card span2">
        @weekDay<br/>
        @string.Format("{0:dd.MM}", date)
    </div>
    @*<ul data-bind="foreach: filteredInquiries">
        <li data-bind="with: ">
            <span data-bind="text: "></span>
        </li>
    </ul>*@
    foreach (var inquiry in inquiries)
    {
        <!--Modal dialog box of Add comment-->
        <div class="modal hide" id="myModal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h3>Comment to Inquiry</h3>
            </div>
            <div class="modal-body">
                <textarea id="commentTextArea" cols="255" rows="7"></textarea>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal">Close</a>
                <a href="#" class="btn btn-primary" onclick="postComment()">Save</a>
            </div>
        </div>
     
        <div class="card span2">
            <div class="row-fluid">
                <div class="span4">
                    <img src="@Url.Content(inquiry.Client.PhotoPath.Or("~/Content/Images/DummyPhoto.jpg"))" alt="Photo" width="100%" height="100%"/>
                </div>
                <div class="span8">
                    <span class="font-medium">@inquiry.Client.FullName</span><br/>
                    <span>@inquiry.Subject<br/></span>
                    <span>@inquiry.Client.Phone</span><br/>
                    <span>@inquiry.Client.Email</span><br/>
                    <span>@inquiry.Client.Country</span><br/>
                    <ul class="nav nav-pills ">
                        <li class="dropdown">
                            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Menu <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href="#">Assign to <i class="icon-arrow-right"></i></a>
                                    <ul class="dropdown-menu sub-menu">                                  
                                        @foreach (var employee in employees)
                                        {
                                            <li class="row-fluid">
                                                <div class="span3"><img src="@Url.Content(employee.PhotoPath.Or("~/Content/Images/DummyPhoto.jpg"))" alt="Photo"/></div>                                                
                                                <div class="span9">
                                                    @if (inquiry.Assignee!= null && inquiry.Assignee.Id == employee.Id)
                                                    {
                                                        <button class="btn-success" onclick="OnClickAssign(@employee.Id,@inquiry.Id)">@employee.FullName</button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn-info" onclick="OnClickAssign(@employee.Id,@inquiry.Id)">@employee.FullName</button>
                                                    }
                                                    
                                                </div>
                                            </li>
                                        }                                                                                 
                                    </ul>
                                </li>
                                <li>
                                    <a href="#">Move to <i class="icon-arrow-right"></i></a>
                                    <ul class="dropdown-menu sub-menu">
                                        <li class="row-fluid">
                                            <!-- TODO Insert calendar-->
                                            
                                        </li>
                                    </ul>
                                </li>
                                <li><a data-toggle="modal" href="#" onclick=" ShowModal(@inquiry.Id)" >Add comment</a></li>
                            </ul>
                        </li>
                    </ul>                  
                </div>
            </div>
        </div>
    }
}

@{
    var today = DateTime.Today;
    var days = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" };
}
<div class = "container">
    <div class="row">
        @for (int i = 1; i <= days.Count(); i++)
        {
            <div class="span2">
                @RenderColumn(days[i - 1],
                    today.AddDays(i - (int)today.DayOfWeek).Date,
                    Model.Inquiries.Where(x => x.ReferenceDate.DayOfWeek == (DayOfWeek)i), Model.Employees)
            </div>    
        }
    </div>
</div>
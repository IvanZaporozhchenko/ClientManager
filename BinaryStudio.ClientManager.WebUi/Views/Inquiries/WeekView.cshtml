@using BinaryStudio.ClientManager.DomainModel.Entities
@model IEnumerable<BinaryStudio.ClientManager.DomainModel.Entities.Inquiry>
           
<script type="text/javascript">
    function WeekViewModel() {
        var self = this;
        self.filter = ko.observable("");
        self.filteredInquiries = ko.computed(function() {
            return @Model.Where(x => x.Client.FirstName.Contains("a"));
        });
    }

    $(document).ready(function () {
        ko.applyBindings(new WeekViewModel());
    });
</script>

@helper RenderColumn(string weekDay, DateTime date, IEnumerable<Inquiry> inquiries)
{
    <div class="header-card span2">
        @weekDay<br/>
        @string.Format("{0:dd.MM}", date)
    </div>
    @*<ul data-bind="foreach: filteredInquiries">
        <li data-bind="with: ">
            <span data-bind="text: "></span>
        </li>
    </ul>*@
    foreach (var inquiry in inquiries)
    {
        
        <div class="modal hide" id="myModal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h3>Comment to Inquiry</h3>
            </div>
            <div class="modal-body">
                <textarea id="@inquiry.Id" cols="255" rows="7"></textarea>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal">Close</a>
                <a href="#" class="btn btn-primary">Save</a>
                </div>
        </div>
    
        <div class="card span2">
            <div class="row-fluid">
                <div class="span4">
                    <img src="@Url.Content(inquiry.Client.PhotoPath)" alt="Photo" width="100%" height="100%"/>
                </div>
                <div class="span8">
                    <span class="font-medium">@inquiry.Client.FullName</span><br/>
                    @inquiry.Subject<br/>
                    @inquiry.Client.Phone<br/>
                    @inquiry.Client.Email<br/>
                    @inquiry.Client.Country<br/>
                    <ul class="nav nav-pills">
                    <li class="dropdown">
                        <a href="#" data-toggle="dropdown" class="dropdown-toggle">Menu <b class="caret"></b></a>
                          <ul class="dropdown-menu">
                            <li>
                                <a href="#">Assign to <i class="icon-arrow-right"></i></a>
                                <ul class="dropdown-menu sub-menu">
                                    <li class="row-fluid">
                                        <div class="span3"><img src="@Url.Content(inquiry.Client.PhotoPath)" alt="Photo"/></div>
                                        <div class="span9"><a href="#">Petro Petrov</a></div>
                                    </li>
                                </ul>
                            </li>
                              <li>
                                  <a href="#">Move to <i class="icon-arrow-right"></i></a>
                                  <ul class="dropdown-menu sub-menu">
                                      <li class="row-fluid">
                                          <!-- TODO Insert calendar-->
                                      </li>
                                  </ul>
                              </li>
                            <li><a data-toggle="modal" href="#myModal" >Add comment</a></li>
                          </ul>
                    </li>
                    </ul>
                </div>
            </div>
        </div>
    }
}

@{
    var today = DateTime.Today;
    var days = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" };
}
<div class = "container">
    <div class="row">
        <div class="span3 offset7">
            <input type="text" class="filter" width="100%" data-bind="value: filter"/>
        </div>
    </div>
    <div class="row">
        @for (int i = 1; i <= days.Count(); i++)
        {
            <div class="span2">
                @RenderColumn(days[i - 1],
                    today.AddDays(i - (int)today.DayOfWeek).Date,
                    Model.Where(x => x.ReferenceDate.DayOfWeek == (DayOfWeek)i))
            </div>    
        }
    </div>
</div>